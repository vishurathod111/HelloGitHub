%% Initiate error handling
modelErr = 'H:\Intercax\Syndeia Testing\Syndeia Builds\3.2.202\Simulink\Test Directory\Simulink Directory\Simulink\MagicDraw\Blocks\CreateSystem.err';
if exist(modelErr, 'file') == 2
  delete(modelErr);
end
%% Initiate warning handling
modelWarn = 'H:\Intercax\Syndeia Testing\Syndeia Builds\3.2.202\Simulink\Test Directory\Simulink Directory\Simulink\MagicDraw\Blocks\CreateSystem.warn';
if exist(modelWarn, 'file') == 2
  delete(modelWarn);
end

try

CreateBusFile('AllBuses', 'Bus_1', 2, 'signal1', 'double', 'signal2', 'boolean', 'Bus_2', 3, 'signal1', 'double', 'signal2', 'boolean', 'signal3', 'int32', 'Bus_3', 2, 'signal1', 'double', 'signal_2', 'boolean');

%% Create model...
CreateModel('PartA11', 'AllBuses');
% Create IN ports...
AddLBlock('PartA11', 'in1', 'Inport', [25 25 70 50], 'OutDataTypeStr', 'Bus: Bus_1', 'BusOutputAsStruct','on');
% Create blocks...
% Create OUT ports...
AddLBlock('PartA11', 'out1', 'Outport', [95 75 140 100], 'OutDataTypeStr', 'double');
% Create lines...
% Save model...
SaveModelAndClose('PartA11', 'H:\Intercax\Syndeia Testing\Syndeia Builds\3.2.202\Simulink\Test Directory\Simulink Directory\Simulink\MagicDraw\Blocks\PartA11');

%% Create model...
CreateModel('Part_A1', 'AllBuses');
% Create IN ports...
AddLBlock('Part_A1', 'in1', 'Inport', [25 25 70 50], 'OutDataTypeStr', 'Bus: Bus_1', 'BusOutputAsStruct','on');
% Create blocks...
AddMRBlock('Part_A1', 'pA11', 'PartA11', [95 75 185 150]);
% Create OUT ports...
AddLBlock('Part_A1', 'out1', 'Outport', [210 175 255 200], 'OutDataTypeStr', 'double');
% Create lines...
AddConnector('Part_A1', 'pA11', '1', 'out1', '1');
AddConnector('Part_A1', 'in1', '1', 'pA11', '1');
% Save model...
SaveModelAndClose('Part_A1', 'H:\Intercax\Syndeia Testing\Syndeia Builds\3.2.202\Simulink\Test Directory\Simulink Directory\Simulink\MagicDraw\Blocks\Part_A1');

%% Create model...
CreateModel('PartA', 'AllBuses');
% Create IN ports...
AddLBlock('PartA', 'in1', 'Inport', [25 25 70 50], 'OutDataTypeStr', 'Bus: Bus_1', 'BusOutputAsStruct','on');
% Create blocks...
AddMRBlock('PartA', 'pA1', 'Part_A1', [95 75 185 150]);
% Create OUT ports...
AddLBlock('PartA', 'out1', 'Outport', [210 175 255 200], 'OutDataTypeStr', 'double');
% Create lines...
AddConnector('PartA', 'in1', '1', 'pA1', '1');
AddConnector('PartA', 'pA1', '1', 'out1', '1');
% Save model...
SaveModelAndClose('PartA', 'H:\Intercax\Syndeia Testing\Syndeia Builds\3.2.202\Simulink\Test Directory\Simulink Directory\Simulink\MagicDraw\Blocks\PartA');

%% Create model...
CreateModel('PartB1', 'AllBuses');
% Create IN ports...
AddLBlock('PartB1', 'in1', 'Inport', [25 25 70 50], 'OutDataTypeStr', 'int32');
% Create blocks...
% Create OUT ports...
AddLBlock('PartB1', 'out1', 'Outport', [95 75 140 100], 'OutDataTypeStr', 'int32');
% Create lines...
% Save model...
SaveModelAndClose('PartB1', 'H:\Intercax\Syndeia Testing\Syndeia Builds\3.2.202\Simulink\Test Directory\Simulink Directory\Simulink\MagicDraw\Blocks\PartB1');

%% Create model...
CreateModel('PartB', 'AllBuses');
% Create IN ports...
AddLBlock('PartB', 'in1', 'Inport', [25 25 70 50], 'OutDataTypeStr', 'int32');
% Create blocks...
AddMRBlock('PartB', 'p_B', 'PartB1', [95 75 185 150]);
% Create OUT ports...
AddLBlock('PartB', 'out1', 'Outport', [210 175 255 200], 'OutDataTypeStr', 'int32');
% Create lines...
AddConnector('PartB', 'in1', '1', 'p_B', '1');
AddConnector('PartB', 'p_B', '1', 'out1', '1');
% Save model...
SaveModelAndClose('PartB', 'H:\Intercax\Syndeia Testing\Syndeia Builds\3.2.202\Simulink\Test Directory\Simulink Directory\Simulink\MagicDraw\Blocks\PartB');

%% Create model...
CreateModel('PartC1', 'AllBuses');
% Create IN ports...
AddLBlock('PartC1', 'in1', 'Inport', [25 25 70 50], 'OutDataTypeStr', 'double');
AddLBlock('PartC1', 'in2', 'Inport', [95 75 140 100], 'OutDataTypeStr', 'int32');
% Create blocks...
% Create OUT ports...
AddLBlock('PartC1', 'out1', 'Outport', [165 125 210 150], 'OutDataTypeStr', 'double');
AddLBlock('PartC1', 'out2', 'Outport', [235 175 280 200], 'OutDataTypeStr', 'boolean');
% Create lines...
% Save model...
SaveModelAndClose('PartC1', 'H:\Intercax\Syndeia Testing\Syndeia Builds\3.2.202\Simulink\Test Directory\Simulink Directory\Simulink\MagicDraw\Blocks\PartC1');

%% Create model...
CreateModel('PartC', 'AllBuses');
% Create IN ports...
AddLBlock('PartC', 'in_1', 'Inport', [25 25 70 50], 'OutDataTypeStr', 'double');
AddLBlock('PartC', 'in_2', 'Inport', [95 75 140 100], 'OutDataTypeStr', 'int32');
% Create blocks...
AddMRBlock('PartC', 'pc1', 'PartC1', [165 125 255 200]);
% Create OUT ports...
AddLBlock('PartC', 'out_1', 'Outport', [280 225 325 250], 'OutDataTypeStr', 'double');
AddLBlock('PartC', 'out_2', 'Outport', [350 275 395 300], 'OutDataTypeStr', 'boolean');
% Create lines...
AddConnector('PartC', 'in_1', '1', 'pc1', '1');
AddConnector('PartC', 'in_2', '1', 'pc1', '2');
AddConnector('PartC', 'pc1', '1', 'out_1', '1');
AddConnector('PartC', 'pc1', '2', 'out_2', '1');
% Save model...
SaveModelAndClose('PartC', 'H:\Intercax\Syndeia Testing\Syndeia Builds\3.2.202\Simulink\Test Directory\Simulink Directory\Simulink\MagicDraw\Blocks\PartC');

%% Create model...
CreateModel('Part_D1', 'AllBuses');
% Create IN ports...
AddLBlock('Part_D1', 'in_1', 'Inport', [25 25 70 50], 'OutDataTypeStr', 'Bus: Bus_2', 'BusOutputAsStruct','on');
% Create blocks...
% Create OUT ports...
AddLBlock('Part_D1', 'out_2', 'Outport', [95 75 140 100], 'OutDataTypeStr', 'Bus: Bus_3', 'BusOutputAsStruct','on');
% Create lines...
% Save model...
SaveModelAndClose('Part_D1', 'H:\Intercax\Syndeia Testing\Syndeia Builds\3.2.202\Simulink\Test Directory\Simulink Directory\Simulink\MagicDraw\Blocks\Part_D1');

%% Create model...
CreateModel('Part_D', 'AllBuses');
% Create IN ports...
AddLBlock('Part_D', 'in_1', 'Inport', [25 25 70 50], 'OutDataTypeStr', 'Bus: Bus_2', 'BusOutputAsStruct','on');
% Create blocks...
AddMRBlock('Part_D', 'pd_1', 'Part_D1', [95 75 185 150]);
% Create OUT ports...
AddLBlock('Part_D', 'out_1', 'Outport', [210 175 255 200], 'OutDataTypeStr', 'Bus: Bus_3', 'BusOutputAsStruct','on');
% Create lines...
AddConnector('Part_D', 'in_1', '1', 'pd_1', '1');
AddConnector('Part_D', 'pd_1', '1', 'out_1', '1');
% Save model...
SaveModelAndClose('Part_D', 'H:\Intercax\Syndeia Testing\Syndeia Builds\3.2.202\Simulink\Test Directory\Simulink Directory\Simulink\MagicDraw\Blocks\Part_D');

%% Create model...
CreateModel('System', 'AllBuses');
% Create IN ports...
AddLBlock('System', 'in1', 'Inport', [25 25 70 50], 'OutDataTypeStr', 'Bus: Bus_1', 'BusOutputAsStruct','on');
AddLBlock('System', 'in2', 'Inport', [95 75 140 100], 'OutDataTypeStr', 'int32');
AddLBlock('System', 'in3', 'Inport', [165 125 210 150], 'OutDataTypeStr', 'Bus: Bus_2', 'BusOutputAsStruct','on');
% Create blocks...
AddMRBlock('System', 'pA', 'PartA', [235 175 325 250]);
AddMRBlock('System', 'pB', 'PartB', [350 275 440 350]);
AddMRBlock('System', 'pC', 'PartC', [465 375 555 450]);
AddMRBlock('System', 'pD', 'Part_D', [580 475 670 550]);
% Create OUT ports...
AddLBlock('System', 'out1', 'Outport', [695 575 740 600], 'OutDataTypeStr', 'double');
AddLBlock('System', 'out2', 'Outport', [765 625 810 650], 'OutDataTypeStr', 'boolean');
AddLBlock('System', 'out3', 'Outport', [835 675 880 700], 'OutDataTypeStr', 'Bus: Bus_3', 'BusOutputAsStruct','on');
% Create lines...
AddConnector('System', 'in1', '1', 'pA', '1');
AddConnector('System', 'in2', '1', 'pB', '1');
AddConnector('System', 'pD', '1', 'out3', '1');
AddConnector('System', 'pA', '1', 'pC', '1');
AddConnector('System', 'pB', '1', 'pC', '2');
AddConnector('System', 'pC', '1', 'out1', '1');
AddConnector('System', 'pC', '2', 'out2', '1');
AddConnector('System', 'in3', '1', 'pD', '1');
% Save model...
SaveModelAndClose('System', 'H:\Intercax\Syndeia Testing\Syndeia Builds\3.2.202\Simulink\Test Directory\Simulink Directory\Simulink\MagicDraw\Blocks\System');


%% Write errors to modelErr
catch me
  fid = fopen(modelErr, 'at');
  msgText = getReport(me, 'extended', 'hyperlinks', 'off');
  fprintf(fid, regexprep(msgText, '\\', '\\\'));
  if ~isempty(gcs) && strcmp(get_param(gcs, 'dirty'), 'on')
    fprintf(fid, '\nSaving unfinished model %s.', gcs);
    close_system(gcs, 0);
  end
  fclose(fid);
end


